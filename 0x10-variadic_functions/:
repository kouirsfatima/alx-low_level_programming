#include "variadic_functions.h"

/**
 * print_all - prints anything.
 * @format: a list of types of arguments passed to the function.
 *
 * Return: no return.
 */
void print_all(const char * const format, ...)
{
	va_list args;
	unsigned int i = 0;
	char c;
	int j;
	float f;
	char *s;

	va_start(args, format);

	while (format != NULL && format[i] != '\0')
	{
		switch (format[i])
		{
			case 'c':
				c = va_arg(args, int);
				printf("%c", c);
				break;

			case 'j':
				j = va_arg(args, int);
				printf("%d", j);
				break;

			case 'f':
				f = va_arg(args, double);
				printf("%f", f);
				break;

			case 's':
				s = va_arg(args, char *);
				if (s == NULL)
					printf("(nil)");
				else
					printf("%s", s);
				break;

			default:
				break;
		}

		i++;

		if (format[i] != '\0')
			printf(", ");
	}

	printf("\n");
	va_end(args);
}
